@import '~@bubbles/styles/scss/utilities/skeleton';
@import '~@bubbles/styles/scss/tokens';
@import 'mixins';

.btn {
  @include button-base;
}

// Reset intrinsic padding in Firefox (see #731)
.btn::-moz-focus-inner {
  padding: 0;
  border: 0;
}

.btn--primary {
  @include button-theme(
    $button-primary,
    transparent,
    $text-on-color,
    $button-primary-hover,
    currentColor,
    $button-primary-active
  );

  &:hover {
    color: $text-on-color;
  }
}

.btn--secondary {
  @include button-theme(
    $button-secondary,
    transparent,
    $text-on-color,
    $button-secondary-hover,
    currentColor,
    $button-secondary-active
  );

  &:hover,
  &:focus {
    color: $text-on-color;
  }
}

.btn--tertiary {
  @include button-theme(
    transparent,
    $button-tertiary,
    $button-tertiary,
    $button-tertiary-hover,
    currentColor,
    $button-tertiary-active
  );

  &:hover {
    color: $text-inverse;
  }

  &:focus {
    background-color: $button-tertiary;
    color: $text-inverse;
  }

  &:active {
    border-color: transparent;
    background-color: $button-tertiary-active;
    color: $text-inverse;
  }

  &:disabled,
  &:hover:disabled,
  &:focus:disabled,
  &.btn--disabled,
  &.btn--disabled:hover,
  &.btn--disabled:focus {
    background: transparent;
    color: $text-on-color-disabled;
    outline: none;
  }
}

.btn--ghost {
  @include button-theme(
    transparent,
    transparent,
    $link-primary,
    $background-hover,
    currentColor,
    $background-active
  );

  padding: $button-padding-ghost;

  .btn__icon {
    position: static;
    margin-left: $spacing-03;
  }

  &:hover,
  &:active {
    color: $link-primary-hover;
  }

  &:active {
    background-color: $background-active;
  }

  &:disabled,
  &:hover:disabled,
  &:focus:disabled,
  &.btn--disabled,
  &.btn--disabled:hover,
  &.btn--disabled:focus {
    border-color: transparent;
    background: transparent;
    color: $text-on-color-disabled;
    outline: none;
  }

  &.btn--sm {
    padding: $button-padding-ghost-sm;
  }

  // V11: remove field
  &.btn--field,
  &.btn--md {
    padding: $button-padding-ghost-field;
  }
}

.btn--icon-only {
  padding-right: rem(15px);
  padding-left: rem(15px);

  .btn__icon {
    position: static;
  }

  &.btn--ghost .btn__icon,
  &.btn--danger--ghost .btn__icon {
    margin: 0;
  }
}

.btn--icon-only.btn--selected {
  background: $background-selected;
}

.btn path[data-icon-path='inner-path'] {
  fill: none;
}

.btn--ghost.btn--icon-only
  .btn__icon
  path:not([data-icon-path]):not([fill='none']),
.btn--ghost.btn--icon-only .btn__icon {
  fill: $icon-primary;
}

.btn--ghost.btn--icon-only[disabled]
  .btn__icon
  path:not([data-icon-path]):not([fill='none']),
.btn--ghost.btn--icon-only[disabled]
  .btn__icon,
.btn.btn--icon-only.btn--ghost[disabled]:hover
  .btn__icon {
  fill: $icon-on-color-disabled;
}

.btn--ghost.btn--icon-only[disabled] {
  cursor: not-allowed;
}

.btn--field.btn--icon-only,
.btn--md.btn--icon-only {
  padding-right: rem(11px);
  padding-left: rem(11px);
}

.btn--sm.btn--icon-only {
  padding-right: rem(7px);
  padding-left: rem(7px);
}

.btn--danger {
  @include button-theme(
    $button-danger-primary,
    transparent,
    $text-on-color,
    $button-danger-hover,
    currentColor,
    $button-danger-active
  );

  &:hover {
    color: $text-on-color;
  }

  // TODO: deprecate single dash tertiary
  &-tertiary,
  &--tertiary {
    @include button-theme(
      transparent,
      $button-danger-secondary,
      $button-danger-secondary,
      $button-danger-hover,
      currentColor,
      $button-danger-active
    );

    &:hover {
      border-color: $button-danger-hover;
      color: $text-on-color;
    }

    &:focus {
      background-color: $button-danger-primary;
      color: $text-on-color;
    }

    &:active {
      border-color: $button-danger-active;
      color: $text-on-color;
    }

    &:disabled,
    &:hover:disabled,
    &:focus:disabled,
    &.btn--disabled,
    &.btn--disabled:hover,
    &.btn--disabled:focus {
      background: transparent;
      color: $text-on-color-disabled;
      outline: none;
    }
  }

  // TODO: deprecate single dash ghost
  &-ghost,
  &--ghost {
    @include button-theme(
      transparent,
      transparent,
      $button-danger-secondary,
      $button-danger-hover,
      currentColor,
      $button-danger-active
    );

    padding: $button-padding-ghost;

    .btn__icon {
      position: static;
      margin-left: $spacing-03;
    }

    &:hover,
    &:active {
      color: $text-on-color;
    }

    &:disabled,
    &:hover:disabled,
    &:focus:disabled,
    &.btn--disabled,
    &.btn--disabled:hover,
    &.btn--disabled:focus {
      border-color: transparent;
      background: transparent;
      color: $text-disabled;
      outline: none;
    }

    &.btn--sm {
      padding: $button-padding-ghost-sm;
    }

    // V11: Remove field
    &.btn--field,
    &.btn--md {
      padding: $button-padding-ghost-field;
    }
  }
}

.btn--sm {
  min-height: rem(32px);
  padding: $button-padding-sm;
}

.btn--xl:not(.btn--icon-only) {
  @include button-padding-large;

  min-height: rem(80px);
}

.btn--lg:not(.btn--icon-only) {
  @include button-padding-large;

  min-height: rem(64px);
}

.btn--field,
.btn--md {
  min-height: rem(40px);
  padding: $button-padding-field;
}

//expressive styles
.btn--expressive {
  @include type-style('body-short-02');

  min-height: 3rem;
}

.btn--icon-only.btn--expressive {
  padding: 12px 13px;
  //default size 48px
}

.btn.btn--expressive .btn__icon {
  width: rem(20px);
  height: rem(20px);
}

.btn-set .btn.btn--expressive {
  max-width: rem(320px);
}

// Skeleton State
.btn.skeleton {
  @include skeleton;

  width: rem(150px);
}

// button set styles
.btn-set {
  display: flex;
}

.btn-set--stacked {
  flex-direction: column;
}

.btn-set .btn {
  width: 100%;
  // 196px from design kit
  max-width: rem(196px);

  &:not(:focus) {
    box-shadow: rem(-1px) 0 0 0 $button-separator;
  }

  &:first-of-type:not(:focus) {
    box-shadow: inherit;
  }
}

.btn-set .btn:focus + .btn {
  box-shadow: inherit;
}

.btn-set--stacked .btn:not(:focus) {
  box-shadow: 0 rem(-1px) 0 0 $button-separator;
}

.btn-set--stacked .btn:first-of-type:not(:focus) {
  box-shadow: inherit;
}

.btn-set .btn.btn--disabled {
  box-shadow: rem(-1px) 0 0 0 $icon-on-color-disabled;

  &:first-of-type {
    box-shadow: none;
  }
}

.btn-set--stacked .btn.btn--disabled {
  box-shadow: 0 rem(-1px) 0 0 $layer-selected-disabled;

  &:first-of-type {
    box-shadow: none;
  }
}

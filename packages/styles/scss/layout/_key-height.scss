@use 'sass:meta';
@use 'sass:math';

@import 'breakpoint';
@import '../tools/utilities';

/// Get the column width for a given breakpoint
/// @param {String} $breakpoint
/// @param {Map} $breakpoints [$grid-breakpoints]
/// @return {Number} In rem
@function bubbles--get-column-width(
  $breakpoint,
  $breakpoints: $grid-breakpoints
) {
  @if map-has-key($breakpoints, $breakpoint) {
    $values: map-get($breakpoints, $breakpoint);
    $width: map-get($values, width);
    $margin: map-get($values, margin);
    $columns: map-get($values, columns);

    @if meta.function-exists('div', 'math') {
      @return math.div($width - (2 * $margin), $columns);
    } @else {
      @return ($width - (2 * $margin)) / $columns;
    }
  } @else {
    @warn 'Breakpoint: `#{$breakpoint}` is not a valid breakpoint.';
  }
}

/// @type Map
$bubbles--key-height-scales: (
  sm: (
    bubbles--get-column-width(sm),
    bubbles--get-column-width(sm) * 2,
    bubbles--get-column-width(sm) * 3,
    bubbles--get-column-width(sm) * 4,
    bubbles--get-column-width(sm) * 5,
    bubbles--get-column-width(sm) * 6,
  ),
  md: (
    bubbles--get-column-width(md),
    bubbles--get-column-width(md) * 2,
    bubbles--get-column-width(md) * 3,
    bubbles--get-column-width(md) * 4,
    bubbles--get-column-width(md) * 5,
    bubbles--get-column-width(md) * 6,
  ),
  lg: (
    bubbles--get-column-width(lg),
    bubbles--get-column-width(lg) * 2,
    bubbles--get-column-width(lg) * 3,
    bubbles--get-column-width(lg) * 4,
    bubbles--get-column-width(lg) * 5,
    bubbles--get-column-width(lg) * 6,
    bubbles--get-column-width(lg) * 7,
    bubbles--get-column-width(lg) * 8,
  ),
  xlg: (
    bubbles--get-column-width(xlg),
    bubbles--get-column-width(xlg) * 2,
    bubbles--get-column-width(xlg) * 3,
    bubbles--get-column-width(xlg) * 4,
    bubbles--get-column-width(xlg) * 5,
    bubbles--get-column-width(xlg) * 6,
    bubbles--get-column-width(xlg) * 7,
    bubbles--get-column-width(xlg) * 8,
  ),
  max: (
    bubbles--get-column-width(max),
    bubbles--get-column-width(max) * 2,
    bubbles--get-column-width(max) * 3,
    bubbles--get-column-width(max) * 4,
    bubbles--get-column-width(max) * 5,
    bubbles--get-column-width(max) * 6,
    bubbles--get-column-width(max) * 7,
    bubbles--get-column-width(max) * 8,
  ),
);

/// Get the value of a key height step at a given breakpoint
/// @param {String} $breakpoint
/// @param {Number} $step
/// @return {Number} In rem
@function bubbles--key-height($breakpoint, $step) {
  @if map-has-key($bubbles--key-height-scales, $breakpoint) {
    @return nth(map-get($bubbles--key-height-scales, $breakpoint), $step);
  } @else {
    @warn 'Breakpoint: `#{$breakpoint}` is not a valid breakpoint.';
  }
}

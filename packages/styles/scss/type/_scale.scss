@import '../tools/convert';

/// Compute the type size for the given type scale step
/// @param {Number} $step
/// @return {Number} In px
@function bubbles--get-type-size($step) {
  @if $step == 1 {
    @return 12px;
  }
  // Yn = Yn-1 + {INT[(n-2)/4] + 1} * 2
  @return bubbles--get-type-size($step - 1) + (floor(($step - 2) * 0.25) + 1) * 2;
}

/// Type scale follows a custom formula for determining each step size and supports sizes from 12px to 92px
/// @type Map
$bubbles--type-scale: ();
@for $i from 1 through 23 {
  $bubbles--type-scale: append(
    $bubbles--type-scale,
    rem(bubbles--get-type-size($i))
  );
}

/// Get the value of a specific step in the type scale
/// @param {Number} $step
/// @return {Number} In rem
@function type-scale($step) {
  @return nth($bubbles--type-scale, $step);
}

/// Set the font-size value of a selector with the value at the given `$step`
/// @param {Number} $step
@mixin type-scale($step) {
  font-size: type-scale($step);
}

/// Alias of `type-scale` mixin.
/// @param {Number} $step
/// @alias bubbles--type-scale
@mixin bubbles--font-size($step) {
  font-size: type-scale($step);
}
